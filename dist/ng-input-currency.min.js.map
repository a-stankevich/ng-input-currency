{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/ng-input-currency.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","angular","name","service","$locale","this","toFloat","str","isNumber","parseFloat","isString","TypeError","replace","RegExp","stringToRegExp","NUMBER_FORMATS","GROUP_SEP","CURRENCY_SYM","DECIMAL_SEP","opt","isValid","val","isNaN","preformatValue","groupRegex","decimalRegex","groupMatch","match","decimalMatch","directive","$filter","util","$timeout","restrict","link","$scope","$element","$attrs","$ngModel","opts","updateOn","updateOnDefault","$options","undefined","createChild","filter","$formatters","push","value","$parsers","currency","$setViewValue","$render","on","$viewValue","$modelValue","$validators","modelValue"],"mappings":"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","file":"ng-input-currency.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","module.exports = angular.module('ngInputCurrency', []).name;\n\nangular.module('ngInputCurrency').service('ngInputCurrencyService', ['$locale', function($locale) {\n  this.toFloat = function(str) {\n    if (angular.isNumber(str))\n      return parseFloat(str, 10);\n\n    if (!angular.isString(str))\n      throw new TypeError('ngInputCurrencyService.toFloat expects argument to be a String, but was given ' + str);\n\n    str = str\n      .replace(new RegExp(this.stringToRegExp($locale.NUMBER_FORMATS.GROUP_SEP), 'g'), '')\n      .replace(new RegExp(this.stringToRegExp($locale.NUMBER_FORMATS.CURRENCY_SYM), 'g'), '')\n      .replace(new RegExp(this.stringToRegExp($locale.NUMBER_FORMATS.DECIMAL_SEP), 'g'), '.');\n\n    return parseFloat(str, 10);\n  };\n\n  this.stringToRegExp = function(str, opt) {\n    return str.replace(/\\./g,'\\\\.')\n         .replace(/\\[/g, '\\\\[')\n         .replace(/\\]/g, '\\\\]')\n         .replace(/\\,/g, '\\\\,')\n         .replace(/\\|/g, '\\\\|')\n         .replace(/\\)/g, '\\\\)')\n         .replace(/\\(/g, '\\\\(')\n         .replace(/\\^/g, '\\\\^')\n         .replace(/\\$/g, '\\\\$')\n         .replace(/\\_/g, '\\\\_')\n         .replace(/\\?/g, '\\\\?')\n         .replace(/\\-/g, '\\\\-');\n  };\n\n  this.isValid = function(val) {\n    return angular.isNumber(val) && !isNaN(val);\n  };\n\n  this.preformatValue = function(val) {\n    if (!angular.isString(val))\n      return val;\n\n    val = val.replace($locale.NUMBER_FORMATS.CURRENCY_SYM, '')\n\n    var groupRegex = new RegExp(this.stringToRegExp($locale.NUMBER_FORMATS.GROUP_SEP), 'g'),\n        decimalRegex = new RegExp(this.stringToRegExp($locale.NUMBER_FORMATS.DECIMAL_SEP), 'g');\n\n    var groupMatch = val.match(groupRegex), decimalMatch = val.match(decimalRegex);\n    if (groupMatch && groupMatch.length == 1 && (!decimalMatch || decimalMatch.length === 0))\n      return val.replace(groupRegex, '.');\n\n    if (decimalMatch && decimalMatch.length == 1 && (!groupMatch || groupMatch.length === 0))\n      return val.replace(decimalRegex, '.');\n\n    return val;\n  };\n}]);\n\nangular.module('ngInputCurrency').directive('ngInputCurrency', ['$locale','$filter','ngInputCurrencyService','$timeout', function($locale,Â $filter, util, $timeout) {\n  var link = function($scope, $element, $attrs, $ngModel){\n\n    var opts = {\n      updateOn: 'blur enter',\n      updateOnDefault: false\n    };\n    if ($ngModel.$options !== null && $ngModel.$options !== undefined)\n      opts = $ngModel.$options.createChild(opts);\n\n    $ngModel.$options = opts;\n\n    var filter = $filter('currency');\n    $ngModel.$formatters.push(function fromModelToView(value) {\n      return filter(value);\n    });\n\n    $ngModel.$parsers.push(function(value) {\n      var currency = util.toFloat(value);\n      if (util.isValid(currency)) {\n        $ngModel.$setViewValue(filter(currency));\n        $ngModel.$render();\n        return currency;\n      }\n    });\n\n    $element.on('blur', function(){\n      if ($ngModel.$viewValue === $ngModel.$modelValue)\n        $element.val(filter($ngModel.$modelValue));\n    });\n\n    $element.on('focus', function(){\n      if (util.isValid($ngModel.$modelValue)) {\n        $ngModel.$setViewValue($ngModel.$modelValue);\n        $ngModel.$render();\n      }\n    });\n\n    $ngModel.$validators.currency = function(modelValue) {\n      return util.isValid(modelValue);\n    };\n\n  };\n  return {\n    'restrict': 'A',\n    'require': 'ngModel',\n    'link': link\n  };\n}]);\n"]}